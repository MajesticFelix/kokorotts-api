# Nginx configuration for KokoroTTS API
# Provides additional rate limiting and caching

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=speech:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=info:10m rate=120r/m;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    upstream kokorotts_api {
        server kokoro-api:8000;
        # Add more servers for load balancing
        # server kokoro-api-2:8000;
        # server kokoro-api-3:8000;
    }

    server {
        listen 80;
        server_name api.yourdomain.com;

        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name api.yourdomain.com;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

        # General rate limiting
        limit_req zone=api burst=20 nodelay;
        limit_conn addr 10;

        # Client body size limit
        client_max_body_size 1m;

        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;

        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://kokorotts_api;
        }

        # Speech synthesis endpoint (stricter rate limiting)
        location /v1/audio/speech {
            limit_req zone=speech burst=5 nodelay;
            limit_conn addr 3;  # Limit concurrent connections
            
            proxy_pass http://kokorotts_api;
            proxy_buffering off;  # Important for streaming responses
        }

        # Information endpoints (lighter rate limiting)
        location ~ ^/v1/audio/(voices|languages) {
            limit_req zone=info burst=10 nodelay;
            
            # Cache these responses
            proxy_cache_valid 200 1h;
            add_header X-Cache-Status $upstream_cache_status;
            
            proxy_pass http://kokorotts_api;
        }

        # API documentation (no rate limiting)
        location ~ ^/(docs|redoc|openapi.json) {
            proxy_pass http://kokorotts_api;
        }

        # Static files (test page, etc.)
        location /static {
            proxy_pass http://kokorotts_api;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # All other endpoints
        location / {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://kokorotts_api;
        }

        # Custom error pages for rate limiting
        error_page 429 @rate_limit_error;
        location @rate_limit_error {
            return 429 '{"error":{"message":"Rate limit exceeded","type":"rate_limit_exceeded","retry_after":60}}';
            add_header Content-Type application/json;
        }
    }
}