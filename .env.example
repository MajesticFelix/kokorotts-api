# KokoroTTS API Environment Configuration
# Copy this file to .env and customize for your deployment

# =================================
# Application Configuration
# =================================

# Environment and basic settings
ENVIRONMENT=production

# Server settings
HOST=0.0.0.0
PORT=8000
WORKERS=2
LOG_LEVEL=info
RELOAD=false
DEBUG=false

# =================================
# API Configuration
# =================================

# API metadata
API_TITLE="Kokoro TTS API"
API_VERSION="1.0.0"
API_DESCRIPTION="OpenAI-compatible TTS API using Kokoro model with voice blending support"
API_DOCS_URL="/docs"
API_REDOC_URL="/redoc"
API_STATIC_DIRECTORY="static"

# Audio and voice settings
API_SUPPORTED_FORMATS="wav,mp3,flac,ogg,opus"
API_MIN_SPEED=0.25
API_MAX_SPEED=4.0
API_DEFAULT_LANGUAGE="a"
API_DEFAULT_VOICE="af_heart"
API_DEFAULT_FORMAT="mp3"
API_VOICE_CACHE_DURATION=3600

# CORS settings
API_CORS_ORIGINS="*"
API_CORS_METHODS="*"
API_CORS_HEADERS="*"
API_ALLOW_CREDENTIALS=true

# =================================
# TTS Engine Configuration
# =================================

# Device configuration (auto, cpu, cuda)
KOKORO_DEVICE=auto

# Audio processing settings
KOKORO_SAMPLE_RATE=24000
KOKORO_DEFAULT_CHUNK_SIZE=800
KOKORO_MAX_CHUNK_SIZE=1000
KOKORO_STREAMING_CHUNK_SIZE=800

# Audio format settings
KOKORO_MP3_BITRATE="192k"
KOKORO_OPUS_CODEC="libopus"

# Memory and batch processing
KOKORO_MEMORY_LIMIT_MB=1024
KOKORO_BATCH_SIZE=5

# Model and cache directories
KOKORO_CACHE_DIR=/app/cache
KOKORO_MODEL_DIR=/app/models
KOKORO_REPO_ID="hexgrad/Kokoro-82M"

# =================================
# Security Configuration
# =================================

# API Authentication (optional)
SECURITY_API_KEY_ENABLED=false
# SECURITY_API_KEY=your-secret-api-key-here
SECURITY_API_KEY_HEADER="X-API-Key"

# Rate limiting (requests per minute)
SECURITY_RATE_LIMIT_ENABLED=false
SECURITY_RATE_LIMIT_PER_MINUTE=60
SECURITY_RATE_LIMIT_BURST=10

# =================================
# External Services (Optional)
# =================================

# Redis cache (configure externally if needed)
# REDIS_URL=redis://redis:6379/0
# REDIS_TTL=3600

# Database for analytics (configure externally if needed)
# DATABASE_URL=postgresql://user:pass@db:5432/analytics

# =================================
# Monitoring and Logging
# =================================

# Health checks
MONITORING_HEALTH_CHECK_ENABLED=true
MONITORING_HEALTH_CHECK_PATH="/health"

# Metrics
MONITORING_METRICS_ENABLED=true
# MONITORING_METRICS_PORT=8001
MONITORING_METRICS_PATH="/metrics"

# Logging configuration
MONITORING_LOG_FORMAT="json"
# MONITORING_LOG_FILE="/app/logs/kokorotts.log"

# External monitoring
# MONITORING_SENTRY_DSN="https://your-sentry-dsn-here"
MONITORING_SENTRY_ENVIRONMENT="production"

# =================================
# Performance Tuning
# =================================

# Threading and concurrency (for CPU deployments)
OMP_NUM_THREADS=2
MKL_NUM_THREADS=2
TORCH_NUM_THREADS=2

# Memory optimization
PYTHONMALLOC=malloc
MALLOC_ARENA_MAX=2

# CUDA settings (for GPU deployment)
# CUDA_VISIBLE_DEVICES=0
# NVIDIA_VISIBLE_DEVICES=all
# NVIDIA_DRIVER_CAPABILITIES=compute,utility
# TORCH_CUDA_ARCH_LIST="6.0;6.1;7.0;7.5;8.0;8.6"

# =================================
# Development Settings
# =================================

# Development mode (only for development)
# DEVELOPMENT=false
# DEVELOPMENT_RELOAD=false
# DEVELOPMENT_DEBUG_PORT=5678

# Test configuration
# TEST_MODE=false
# TEST_VOICE=af_heart
# TEST_TEXT=Hello, this is a test.

# =================================
# Cloud and Deployment
# =================================

# Container configuration
CONTAINER_NAME=kokorotts-api
CONTAINER_TIMEZONE=UTC

# Load balancer settings (for multiple instances)
# INSTANCE_ID=1
# STICKY_SESSIONS=false

# File storage (for model persistence)
# STORAGE_TYPE=local
# STORAGE_PATH=/app/models
# S3_BUCKET=your-bucket-name
# S3_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key

# =================================
# Production Deployment Notes
# =================================

# SSL/TLS: Handle via reverse proxy (nginx, traefik, etc.)
# Load balancing: Use external load balancer
# Monitoring: Prometheus + Grafana via docker-compose profiles
# Caching: Redis via docker-compose profiles
# Security: Enable API key and rate limiting for production

# Example production overrides:
# ENVIRONMENT=production
# SECURITY_API_KEY_ENABLED=true
# SECURITY_API_KEY="your-production-api-key"
# SECURITY_RATE_LIMIT_ENABLED=true
# MONITORING_SENTRY_DSN="your-sentry-dsn"
# KOKORO_DEVICE="cuda"  # if GPU available

# =================================
# CPU vs GPU Optimization Examples
# =================================

# For CPU deployments (smaller chunks, lower memory)
# KOKORO_DEFAULT_CHUNK_SIZE=600
# KOKORO_MAX_CHUNK_SIZE=800
# KOKORO_STREAMING_CHUNK_SIZE=600
# KOKORO_MEMORY_LIMIT_MB=768
# KOKORO_BATCH_SIZE=3
# KOKORO_MP3_BITRATE="128k"

# For GPU deployments (larger chunks, more memory)
# KOKORO_DEFAULT_CHUNK_SIZE=1200
# KOKORO_MAX_CHUNK_SIZE=1500
# KOKORO_STREAMING_CHUNK_SIZE=1000
# KOKORO_MEMORY_LIMIT_MB=2048
# KOKORO_BATCH_SIZE=8
# SECURITY_RATE_LIMIT_PER_MINUTE=120
# SECURITY_RATE_LIMIT_BURST=20

# =================================
# Deprecated Settings (Removed)
# =================================

# The following settings have been replaced by the new configuration system:
# - STREAMING_ENABLED, CAPTIONS_ENABLED, VOICE_BLENDING_ENABLED (now always enabled)
# - BATCH_PROCESSING_ENABLED (now controlled by memory limits)
# - KOKORO_AUTO_DOWNLOAD, KOKORO_MAX_TEXT_LENGTH (removed)
# - DATABASE_URL, REDIS_URL (moved to separate services)
# - SSL_* settings (handled by reverse proxy)